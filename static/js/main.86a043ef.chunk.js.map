{"version":3,"sources":["url/index.js","Movies/MoviesFilterBar.js","Movies/MoviesRender.js","Movies/MoviesPagination.js","MovieSelected/MovieDetails.js","MovieSelected/MovieVideo.js","MovieSelected/MovieSimilar.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","imageUrl","MoviesFilterBar","props","useState","movieInput","setMovieInput","className","type","onChange","event","target","value","onKeyDown","key","inputReplace","split","join","typeMovies","filterMovies","changePage","width","height","MoviesRender","MovieFiltered","moviesRender","movieSplit","_","chunk","movies","index","length","push","map","movie","onClick","id","movieFind","src","poster_path","alt","MoviesPagination","endPagination","pageCount","Math","ceil","currentPage","pageTotal","startPagination","totalPage","pageSelected","updatemovies","text","pageBack","Pagefilter","pageNext","Pagination","i","MovieDetails","original_title","release_date","vote_count","genres","row","name","overview","MovieVideo","lastElement","movieVideo","results","frameBorder","title","MovieSimilar","FirtsMovies","movieSimilar","slice","App","setMovies","page","setPage","setTypeMovies","setFilterMovies","setMovieFind","movieSelected","setMovieSelected","moviePopular","useCallback","a","axios","url","method","then","response","data","findSelectedMovies","MovieSelected","MovieSelectedVideo","MovieSelectedAll","useEffect","GeneralMovies","total_pages","SpecificMovie","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86a043ef.chunk.js","sourcesContent":["export const apiKey = 'e1d1c30211c795931880461ad29e4d79';\r\n\r\nexport const imageUrl = 'https://image.tmdb.org/t/p/original';\r\n\r\nexport const videoUrl = 'https://www.youtube.com/watch?v=';\r\n\r\n\r\n\r\n\r\n","import '../App.css';\r\nimport React, {useState} from 'react';\r\n\r\nconst MoviesFilterBar = (props) => {\r\n\r\n  const [movieInput, setMovieInput] = useState('');\r\n\r\n  const handleChange = (event) =>{\r\n    setMovieInput(event.target.value);\r\n  }\r\n\r\n  //Funcion que devuelve los states al componente padre y vuelven a renderizar la vista\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      const inputReplace = movieInput.split(' ').join('+');\r\n      props.typeMovies('');\r\n      props.filterMovies(inputReplace);\r\n      props.changePage(1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"MoviesFilterBar\">\r\n        <input type=\"text\"  className=\"filterText\" onChange={handleChange} onKeyDown={handleKeyDown}  width=\"200\" height=\"121\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesFilterBar;\r\n","import '../App.css';\r\nimport React from 'react';\r\nimport _ from 'lodash';\r\nimport {imageUrl} from '../url'\r\n\r\nconst MoviesRender = (props) => {\r\n    \r\n  //Funcion donde se realiza el filtro de las peliculas en div que tiene 4 unidades.\r\n    const MovieFiltered = () => {\r\n        \r\n        const SelectedMovie  = (event) =>{\r\n          props.movieFind(event);\r\n        }      \r\n\r\n        const moviesRender = [];\r\n        const MoviesEachRender = 12; //Determina cuantas peliculas se mostraran por div\r\n        const movieSplit = _.chunk(props.movies, MoviesEachRender);\r\n        for (let index = 0; index < movieSplit.length; index++) {\r\n          moviesRender.push(\r\n            <div key = {index} className=\"MovieList\">\r\n            {\r\n                movieSplit[index].map(movie => (\r\n                  <img key={movie.id} className =\"MovieImage\" \r\n                  onClick={() => SelectedMovie(movie.id)} \r\n                  src={movie.poster_path ? imageUrl + movie.poster_path : process.env.PUBLIC_URL + '/images/notFound.png'} \r\n                  width=\"150\"\r\n                  alt=''\r\n                  />\r\n                ))\r\n            }\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <div>\r\n            {moviesRender}\r\n          </div>\r\n        );\r\n      };\r\n\r\n  return (\r\n    <div className=\"moviesRender\">\r\n      <MovieFiltered/>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default MoviesRender;\r\n","import '../App.css';\r\nimport React from 'react';\r\n\r\nconst MoviesPagination = (props) =>{\r\n\r\n  let numberPage = 5; //Indica el numero de paginas que seran visibles y con el que se hara el filtro.\r\n\r\n  const pageCount = Math.ceil(props.currentPage/numberPage);\r\n\r\n  const pageTotal  = (pageCount * numberPage);\r\n\r\n  const startPagination = (pageCount * numberPage) - numberPage +1;\r\n  let endPagination;\r\n\r\n  if(startPagination + (numberPage-1) > props.totalPage){\r\n     endPagination = props.totalPage;\r\n  } else {\r\n     endPagination = startPagination + (numberPage -1);\r\n  }\r\n\r\n        const  pageSelected = (event) => {\r\n          props.updatemovies('');\r\n          props.changePage(event.target.text);\r\n        }\r\n\r\n        const pageBack = (event) =>{\r\n          let Pagefilter = (event -numberPage)\r\n          props.updatemovies('');\r\n          props.changePage(Pagefilter);\r\n        }\r\n\r\n        const pageNext = (event) =>{\r\n          let Pagefilter = (event + numberPage)\r\n          props.updatemovies('');\r\n          props.changePage(Pagefilter);\r\n        }\r\n        \r\n        const Pagination = [];\r\n        \r\n        for (var i = startPagination; i <= endPagination; i++) {\r\n\r\n          if(i === startPagination && startPagination > 1) {\r\n            Pagination.push(<li key={'back'}><a onClick={() => pageBack(startPagination)} className=\"\">«</a></li>);\r\n          }\r\n\r\n          if(props.currentPage == i){\r\n            Pagination.push( <li key={i} ><a className=\"active\">{i}</a></li>);\r\n          } else {\r\n            Pagination.push( <li key={i}><a  onClick={pageSelected}>{i}</a></li>);\r\n          }\r\n\r\n          if(i === pageTotal && pageTotal < props.totalPage){\r\n            Pagination.push(<li key={'next'}><a onClick={() => pageNext(startPagination)} className=\"\">»</a></li>);\r\n          }\r\n      }\r\n\r\n    return(\r\n        <div className=\"MoviesPagination\">\r\n            \r\n        <ul id=\"pagination\">\r\n          {Pagination}\r\n        </ul> \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesPagination;\r\n","import React from 'react';\r\nimport {imageUrl} from '../url'\r\nimport '../css/movieDetails.css';\r\n\r\nconst MovieDetails = (props) => {\r\n\r\n  return (\r\n    <div className=\"movieDetails\">\r\n\r\n        <div className=\"selectedMovieImage\">\r\n            <img className =\"SelectedMovie\" \r\n            src={props.movie.poster_path ? imageUrl + props.movie.poster_path : process.env.PUBLIC_URL + '/images/notFound.png'}\r\n            width=\"150\"\r\n            alt=''\r\n            />\r\n        </div>\r\n\r\n        <div className=\"selectedMovieInfo\">\r\n            <div className=\"SelectedMovieTitulo\">\r\n              {props.movie.original_title}\r\n            </div>\r\n\r\n            <div className=\"SelectedMovieFecha\">\r\n                {props.movie.release_date}\r\n            </div>\r\n\r\n            <div className=\"SelectedMovieVoto\">\r\n                <strong>Votos:</strong> {props.movie.vote_count}\r\n            </div>\r\n\r\n            <div className=\"SelectedMovieGeneroTitulo\">\r\n              Generos:\r\n            </div>\r\n\r\n            <div className=\"SelectedMovieGeneros\">\r\n               {\r\n                   props.movie.genres.map((row,index) => (\r\n                    <div key={index}> {row.name}</div>\r\n                   ))\r\n               }\r\n            </div>\r\n\r\n            <div className=\"SelectedMovieOverviewtitle\">\r\n               VISTA GENERAL\r\n            </div>\r\n            \r\n            <div className=\"SelectedMovieOverview\">\r\n                {props.movie.overview}\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React from 'react';\r\nimport '../css/movieVideo.css';\r\n\r\nconst MovieVideo = (props) => {\r\n    \r\n    const lastElement = props.movieVideo.results[props.movieVideo.results.length - 1];\r\n\r\n  return (\r\n    <div className=\"movieVideo\">\r\n\r\n            <div className=\"youtubeTitle\">\r\n                Trailer\r\n            </div>\r\n        {\r\n            lastElement ?\r\n             \r\n            <div className=\"youtubeVideo\">\r\n                <iframe src={'https://www.youtube.com/embed/'+lastElement.key}\r\n                    frameBorder='0'\r\n                    title='video'\r\n                    width='60%'\r\n                    height='250px'\r\n                />\r\n            </div>\r\n             \r\n            :\r\n             \r\n             <div className =\"noVideo\">\r\n                <img src={process.env.PUBLIC_URL + '/images/notFound.png'} alt='' /> \r\n             </div>   \r\n        }\r\n     \r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MovieVideo;\r\n","import React from 'react';\r\nimport '../css/moviesimilar.css';\r\nimport {imageUrl} from '../url'\r\n\r\nconst MovieSimilar = (props) => {\r\n    \r\n    const FirtsMovies = props.movieSimilar.slice(0, 3);\r\n\r\n    const SelectedMovie  = (event) =>{\r\n      props.movieFind(event);\r\n    }      \r\n    \r\n  return (\r\n    <div className=\"movieSimilar\">\r\n        {\r\n        FirtsMovies.map(function(row,i){\r\n       \r\n           return(\r\n               <div className=\"movieSimilarImage\" key={i}>\r\n                 <img key={row.id} className =\"MovieImage\"  \r\n                 onClick={() => SelectedMovie(row.id)} src={imageUrl + row.poster_path} \r\n                 width=\"150\"\r\n                 alt=''\r\n                 />\r\n               </div>\r\n           )\r\n        })\r\n        }\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MovieSimilar;\r\n","import './App.css';\nimport React, {useState,useEffect,useCallback} from 'react';\nimport axios from 'axios';\nimport {apiKey} from './url'\nimport './css/movie.css';\nimport MoviesFilterBar from './Movies/MoviesFilterBar';\nimport MoviesRender from './Movies/MoviesRender';\nimport MoviesPagination from './Movies/MoviesPagination';\nimport MovieDetails from './MovieSelected/MovieDetails';\nimport MovieVideo from './MovieSelected/MovieVideo';\nimport MovieSimilar from './MovieSelected/MovieSimilar';\n\nfunction App() {\n\n  const [movies, setMovies] = useState('');\n  const [page, setPage] = useState(1);\n  const [typeMovies, setTypeMovies] = useState('popular');\n  const [filterMovies, setFilterMovies] = useState('');\n  const [movieFind, setMovieFind] = useState('');\n  const [movieSelected, setMovieSelected] = useState('');\n\n  //Funcion Async que hace la solicitudes a la API\n  //se ejecuta cuando 1 vez al inicio y luego al hacer algun cambio en las variables:\n  //page,typeMovies,filterMovies\n  const moviePopular = useCallback(async () => {\n    //Aqui va el try catch.\n    if(typeMovies){\n      axios({\n        url: 'https://api.themoviedb.org/3/movie/'+typeMovies+'?api_key='+apiKey+'&language=en-US&page='+page,\n        method: 'get',\n      }).then(function(response){\n        setMovies(response.data)\n      })\n\n    } else {\n      axios({\n        url: 'https://api.themoviedb.org/3/search/movie?api_key='+apiKey+'&query='+filterMovies+'&page='+page,\n        method: 'get',\n      }).then(function(response){\n        setMovies(response.data)\n      })\n    }\n    }, [page,typeMovies,filterMovies]) \n\n    \n  const findSelectedMovies = useCallback(async () => {\n    if(movieFind){\n      axios({\n        url: 'https://api.themoviedb.org/3/movie/'+movieFind+'?api_key='+apiKey+'&language=en-US',\n        method: 'get',\n      }).then(function(response){\n        let MovieSelected = response;\n        axios({\n          url: 'https://api.themoviedb.org/3/movie/'+MovieSelected.data.id+'/videos?api_key='+apiKey+'&language=en-US',\n          method: 'get',\n        }).then(function(response){\n          let MovieSelectedVideo = response;\n          axios({\n            url: 'https://api.themoviedb.org/3/movie/'+MovieSelected.data.id+'/similar?api_key='+apiKey+'&language=en-US&page=1',\n            method: 'get',\n          }).then(function(response){\n            const MovieSelectedAll ={\n              movie : MovieSelected,\n              movieVideo : MovieSelectedVideo,\n              movieSimilar : response\n            }\n            setMovieSelected({...MovieSelectedAll})\n          })    \n        })\n      })\n    }\n    }, [movieFind]) \n\n  useEffect(() => {\n    moviePopular()\n  }, [moviePopular])\n    \n  useEffect(() => {\n    findSelectedMovies()\n  }, [findSelectedMovies])\n\n  //Renderiza:\n  //Filtro de peliculas, listado y paginador.\n  const GeneralMovies =() =>{\n    return(\n      <div>\n\n        <MoviesFilterBar\n        typeMovies={setTypeMovies} \n        filterMovies={setFilterMovies}\n        updatemovies={setMovies}\n        changePage= {setPage}\n        />\n\n        <MoviesRender \n        movies={movies.results}\n        movieFind={setMovieFind} \n        />\n\n        <MoviesPagination\n        currentPage = {page}\n        updatemovies={setMovies}\n        changePage= {setPage}\n        totalPage = {movies.total_pages} \n        />\n\n      </div>\n    );\n  }\n\n  const SpecificMovie=() =>{\n    return(\n      <div>\n\n        <MovieDetails\n         movie ={movieSelected.movie.data}\n        />\n\n        <MovieVideo\n          movieVideo ={movieSelected.movieVideo.data}\n        />\n\n        <MovieSimilar\n          movieSimilar ={movieSelected.movieSimilar.data.results}\n          movieFind={setMovieFind} \n        />\n        \n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <div className =\"container\">\n        <div className=\"GeneralMovies\">\n            {movies \n          \n          ?\n            \n          <GeneralMovies/>\n\n          : \n\n          'Cargando...'\n\n          }\n        \n        </div>\n    \n      <div className =\"SelectedMovie\">\n\n        {movieSelected \n            \n            ?\n                \n            <SpecificMovie\n            />\n  \n            : \n  \n            ''\n  \n          }\n\n      </div>\n\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}